version: '3.0'

services:
  server:
    stdin_open: true #test
    tty: true #test
    container_name: node-server
    build:
      dockerfile: Dockerfile
      context: ./server
    env_file: 
      - server/.env
    volumes:
      - ./server:/app
      - /app/node_modules
    ports:
      - 5000:5000
    command: npm run dev
    depends_on:
      - postgres
    restart: always
  bot:
    stdin_open: true #test
    tty: true #test
    container_name: tgBot
    build:
      dockerfile: Dockerfile
      context: ./tgBot
    env_file: 
      - ./tgBot/.env
    volumes:
      - ./tgBot:/app
      - /app/node_modules
    command: npm run dev
  client: 
    stdin_open: true #test
    tty: true #test
    container_name: react-client
    env_file: 
      - ./client/.env
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile
      context: ./client
    ports:
      - 3000:3000
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm start
  postgres:
    container_name: postgres-server
    image: postgres:latest
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      PG_DATA: /var/lib/postgresql/data
      POSTGRES_DB: webster
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports: 
      - 5432:5432
    volumes: 
      # - ./db:/docker-entrypoint-initdb.d/
      - pgdata:/var/lib/postgresql/data
    restart: always
  

volumes:
  pgdata: 
